body {
  max-inline-size: 600px;
  margin: auto;
  padding: 30px;
}
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: auto;
  margin: 0;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  white-space: nowrap;
}
.icon {
  display: inline-block;
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}

form {
  border: 2px solid;
  padding: 10px;
}

input {
  font: inherit;
  color: inherit;
  letter-spacing: inherit;
}
input[type="radio"],
input[type="checkbox"] {
  appearance: none;
  display: grid;
  place-items: center;
  margin: 0;
  border: 0;
  padding: 0;
}
:where(input[type="radio"], input[type="checkbox"]):before,
:where(input[type="radio"], input[type="checkbox"]):after {
  display: inline-block;
  grid-area: 1/1;
}
:where(input[type="radio"], input[type="checkbox"]):before {
  content: '';
  inline-size: .5em;
  block-size: .5em;
  border: 2px solid;
}
:where(input[type="radio"], input[type="checkbox"]):after {
  inline-size: .3em;
  block-size: .3em;
  background-color: currentColor;
}
input[type="radio"],
input[type="radio"]:before,
input[type="radio"]:after {
  border-radius: 1000px;
}
:where(input[type="radio"], input[type="checkbox"]):checked:after {
  content: '';
}

/* CUSTOM CONTROLS */

.control :where(input, select, textarea) {
  border: 0;
  background-color: transparent;
}

.control:has(:where(input[type="radio"], input[type="checkbox"])) {
  display: flex;
  align-items: center;
  gap: 2px;
}

.control__input {
  display: flex;
  gap: 2px;
  border: 2px solid;
  border-radius: 4px;
  padding: 4px;
}
.control__input :where(input, select, textarea) {
  flex-grow: 1;
  padding: 0;
  outline: 0;
}
.control__input:has(:focus-visible),
#html:focus-visible + .card,
#css:focus-visible + .card,
#js:focus-visible + .card {
  outline: 1px solid;
  outline-offset: 1px;
}
.control__input :where(.icon-check, .icon-cancel) {
  display: none;
}

.js .control:has([data-blurred]:invalid),
.no-js .control:has(:focus-visible:invalid) {
  color: tomato;
}
/* Controls that do not include radio or checkbox, and that also have valid inputs currently focused */
.control:has(
  :where(
    :not(
      [type="radio"],
      [type="checkbox"]
    )
  ):focus-visible:valid
) {
  color: lime;
}
:where(
  .js .control:has([data-blurred]:invalid), 
  .no-js .control:has(:focus-visible:invalid)
) .icon-cancel,
.control:has(:focus-visible:valid) .icon-check {
  display: unset
}

/* Conditional rendering content */
.results__options,
.results__checks,
.results__option,
.results__checked {
  display: none;
}
form:has(:where(#radio-1:checked, #radio-2:checked, #radio-3:checked)) .results__options,
form:has(:where(#checkbox-1:checked, #checkbox-2:checked, #checkbox-3:checked)) .results__checks,
/* form:has(#radio-1:checked) .results__option--1, */
form:has(#radio-1:checked) .show-when-\#radio-1\:checked,
form:has(#radio-2:checked) .results__option--2,
form:has(#radio-3:checked) .results__option--3,
form:has(#checkbox-1:checked) .results__checked--1,
form:has(#checkbox-2:checked) .results__checked--2,
form:has(#checkbox-3:checked) .results__checked--3 {
  display: block;
}

.cards {
  display: flex;
  gap: 1rem;
}
.card {
  position: relative;
  border: 2px solid;
  border-radius: .25rem;
  padding: .5rem;
}
.card label:after {
  content: '';
  position: absolute;
  inset: 0;
}
.card a {
  position: relative;
}
#html:checked + .card,
#css:checked + .card,
#js:checked + .card {
  border-color: goldenrod;
}

form:has(:invalid) button:not([type]),
form:has(:invalid) button[type="submit"] {
  opacity: 0.7;
  cursor: not-allowed;
}