@import url('https://fonts.googleapis.com/css2?family=Manrope:wght@400;700&display=swap');
body {
  max-inline-size: 38rem;
  margin: auto;
  padding: 1.5rem;
  font: 1.25rem/1.5 'Manrope';
  color: #333;
  background-image: url('/background.svg');
    --text: #333;
  --highlight: mediumpurple;
  --highlightDark: darkslateblue;
  --outline: plum;
  --error: tomato;
  --outlineError: pink;
  --success: limegreen;
  --outlineSuccess: palegreen;
}
form {
  border: .125rem solid;
  padding: .75rem;
  background: #fff;
}
input,
select,
button {
  font: inherit;
  color: inherit;
  letter-spacing: inherit;
}
  input[type="radio"],
  input[type="checkbox"] {
    position: relative;
    appearance: none;
    inset-block-start: -0.1em;
    inline-size: 1em;
    block-size: 1em;
    border: .125rem solid;
    border-radius: .125em;
    vertical-align: middle;
    color: inherit;
    transition: box-shadow 0.2s ease;
  }
  input[type='radio'] {
    border-radius: 50%;
  }
  input[type="checkbox"]:checked,
  input[type="radio"]:checked {
    box-shadow: inset 0 0 0 .25em mediumpurple;
  }
fieldset {
  border: .125rem solid;
  border-radius: .25rem;
}

/* UTILS */
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: auto;
  margin: 0;
  overflow: hidden;
  padding: 0;
  position: absolute !important;
  width: 1px;
  white-space: nowrap;
}
.icon {
  display: inline-block;
  inline-size: 1em;
  block-size: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}

/* CUSTOM CONTROLS */
.control :where(input, select, textarea) {
  border: 0;
  background-color: transparent;
}
.control select {
  appearance: none;
}
.control option {
  color: initial;
}
.control:has(select) .icon-chevron-down {
  display: block;
}
.control:has(:where(input[type="radio"], input[type="checkbox"])) {
  display: flex;
  align-items: center;
  gap: .125rem;
}
.control__input {
  display: flex;
  align-items: center;
  gap: .125rem;
  border: .125rem solid;
  border-radius: .25rem;
  padding: .25rem;
}
.control__input :where(input, select, textarea) {
  flex-grow: 1;
  padding: 0;
  outline: 0;
}
.control__input:has(:focus-visible),
.card:has(:focus-visible) {
  outline: 3px solid plum;
}
.control__input :where(.icon-check, .icon-cancel) {
  display: none;
}
.control:has(:focus:invalid) {
  color: tomato;
  outline-color: pink;
}
.control:has(input[required]) label:after {
  content: '';
  margin: .1em;
  padding: .1em;
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128"><path fill="crimson" d="M110 16 76 57v1l51-10v32l-51-9-1 1 35 39-28 17-18-50-1 1-18 49-28-17 34-40-50 9V48l50 10v-1L17 17 46 1l17 48h1L82 1l28 15z"/></svg>') no-repeat 0 25%;
}
/* Controls that do not include radio or checkbox, and that also have valid inputs currently focused */
.control:has(:focus:valid) {
  color: limegreen;
  outline-color: palegreen;
}
.control:has(:focus:invalid) .control__input {
  color: tomato;
  outline-color: pink;
}
/* Controls that do not include radio or checkbox, and that also have valid inputs currently focused */
.control:has(:focus:valid) .control__input {
  color: limegreen;
  outline-color: palegreen;
}
:where(
  .control:has(:focus:invalid), 
  .no-js .control:has(:focus-visible:invalid)
) .icon-cancel,
.control:has(:focus:valid) .icon-check {
  display: unset
}
.control:has(:focus) .icon-chevron-down {
  display: none;
}

/* Conditional rendering content */
.results__options,
.results__checks,
.results__option,
.results__checked {
  display: none;
}
form:has(:where(#radio-1:checked, #radio-2:checked, #radio-3:checked)) .results__options,
form:has(:where(#checkbox-1:checked, #checkbox-2:checked, #checkbox-3:checked)) .results__checks,
/* form:has(#radio-1:checked) .results__option--1, */
form:has(#radio-1:checked) .show-when-\#radio-1\:checked,
form:has(#radio-2:checked) .results__option--2,
form:has(#radio-3:checked) .results__option--3,
form:has(#checkbox-1:checked) .results__checked--1,
form:has(#checkbox-2:checked) .results__checked--2,
form:has(#checkbox-3:checked) .results__checked--3 {
  display: block;
}

.cards {
  display: flex;
  gap: 1rem;
}
.card {
  position: relative;
  border: .125rem solid;
  border-radius: .25rem;
  padding: .5rem;
  transition: box-shadow 0.2s ease;
}
.card svg {
  display: block;
  margin: auto;
}
.card label {
  display: block;
  text-align: center;
}
.card label:after {
  content: '';
  position: absolute;
  inset: 0;
}
.card a {
  position: relative;
}
.card:has(#html:checked),
.card:has(#css:checked),
.card:has(#js:checked) {
  box-shadow: inset 0 0 0 .25em mediumpurple;
}

form:has(:invalid) :where(button:not([type]), button[type="submit"]) {
  opacity: 0.7;
  cursor: not-allowed;
}